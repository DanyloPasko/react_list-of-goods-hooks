{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","DEFAULT","sortBy","setSortBy","isReverse","setIsReverse","goods","sortedGoods","sort","good1","good2","SORT_BY_ABC","localeCompare","SORT_BY_LENGTH","length","reverse","getPreparedGoods","className","type","cn","onClick","setIsRevers","setReverse","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAKKA,E,oFAAAA,K,kBAAAA,E,wBAAAA,E,YAAAA,M,KAWE,IAAMC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAkCK,IAAMC,EAAgB,WAC3B,MAA4BC,mBAASH,EAASI,SAA9C,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAkCH,oBAAS,GAA3C,mBAAOI,EAAP,KAAkBC,EAAlB,KACMC,EAlCR,SAA0BA,EAA1B,GACwC,IAApCJ,EAAmC,EAAnCA,OAAQE,EAA2B,EAA3BA,UACJG,EAAW,YAAOD,GAqBxB,OAnBIJ,GACFK,EAAYC,MAAK,SAACC,EAAOC,GACvB,OAAQR,GACN,KAAKL,EAASc,YACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKb,EAASgB,eACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAKXV,GACFG,EAAYQ,UAGPR,EAWOS,CAAiBlB,EAAiB,CAAEI,SAAQE,cAO1D,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UACtB,CAAE,WAAYjB,IAAWL,EAASc,cACpCS,QAAS,kBAAMjB,EAAUN,EAASc,cAJpC,iCASA,wBACEO,KAAK,SACLD,UAAWE,IAAG,SAAU,aACtB,CAAE,WAAYjB,IAAWL,EAASgB,iBACpCO,QAAS,kBAAMjB,EAAUN,EAASgB,iBAJpC,4BASA,wBACEK,KAAK,SACLD,UAAWE,IAAG,SAAU,aACtB,CAAE,YAA0B,IAAdf,IAChBgB,QAAS,kBAxCnB,SAAoBhB,EAClBiB,GACA,OAA6BA,GAAR,IAAdjB,GAsCgBkB,CAAWlB,EAAWC,IAJvC,sBASEH,GAAUE,IACV,wBACEc,KAAK,SACLD,UAAU,4BACVG,QAvCW,WACnBf,GAAa,GACbF,EAAUN,EAASI,UAkCb,sBAWJ,6BACGK,EAAMiB,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YC/GlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a333895d.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nenum SortType {\n  SORT_BY_ABC = 'abc',\n  SORT_BY_LENGTH = 'length',\n  DEFAULT = '',\n}\n\ninterface FilterParams {\n  sortBy: SortType;\n  isReverse: boolean;\n}\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nfunction getPreparedGoods(goods: string[],\n  { sortBy, isReverse }: FilterParams) {\n  const sortedGoods = [...goods];\n\n  if (sortBy) {\n    sortedGoods.sort((good1, good2) => {\n      switch (sortBy) {\n        case SortType.SORT_BY_ABC:\n          return good1.localeCompare(good2);\n\n        case SortType.SORT_BY_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReverse) {\n    sortedGoods.reverse();\n  }\n\n  return sortedGoods;\n}\n\nfunction setReverse(isReverse : boolean,\n  setIsRevers: React.Dispatch<React.SetStateAction<boolean>>) {\n  return isReverse === false ? setIsRevers(true) : setIsRevers(false);\n}\n\nexport const App: React.FC = () => {\n  const [sortBy, setSortBy] = useState(SortType.DEFAULT);\n  const [isReverse, setIsReverse] = useState(false);\n  const goods = getPreparedGoods(goodsFromServer, { sortBy, isReverse });\n\n  const resetSorting = () => {\n    setIsReverse(false);\n    setSortBy(SortType.DEFAULT);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info',\n            { 'is-light': sortBy !== SortType.SORT_BY_ABC })}\n          onClick={() => setSortBy(SortType.SORT_BY_ABC)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success',\n            { 'is-light': sortBy !== SortType.SORT_BY_LENGTH })}\n          onClick={() => setSortBy(SortType.SORT_BY_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning',\n            { 'is-light': isReverse === false })}\n          onClick={() => setReverse(isReverse, setIsReverse)}\n        >\n          Reverse\n        </button>\n\n        {(sortBy || isReverse) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={resetSorting}\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <ul>\n        {goods.map(good => (\n          <li data-cy=\"Good\" key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}